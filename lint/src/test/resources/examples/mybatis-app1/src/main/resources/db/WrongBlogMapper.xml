<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="db.WrongBlogMapper">
    <!-- Unknown parameterType-->
    <insert id="insertAuthor" parameterType="model.UnknownType"
            useGeneratedKeys="true"
            keyProperty="id">
        insert into Author(name)
        values (#{name})
    </insert>

    <!-- Unknown properties-->
    <insert id="insertBlog" parameterType="model.Blog"
            useGeneratedKeys="true"
            keyProperty="id">
        insert into
        Blog (author_id, blog_name, description, create_time)
        values (#{author.id1}
        , #{blogName1}
        , #{description1}
        , #{createTime1})
    </insert>

    <!-- Unknown resultType-->
    <select id="selectAuthor" resultType="model.UnknownType">
        select id, name from Author
    </select>

    <!-- Unknown resultMap-->
    <select id="selectBlog" resultMap="unknownResult">
        select B.id as id, B.blog_name as blog_name,
        B.description,
        B.create_time as create_time,
        A.id as author_id,
        A.name as author_name,
        C.id as content_id,
        C.content as content_content,
        C.create_time as content_create_time
        from Blog as B
        left join Author as A on B.author_id = A.id
        left join Content as C on B.id = C.blog_id
    </select>

    <!-- Unknown Table, Column-->
    <select id="selectBlog2" resultMap="unknownResult">
        select B.id as id, B.blog_name as blog_name,
        deScription,
        B.create_time as create_time,
        B.create_time as create_time,
        A.id as author_id,
        A.name as author_name,
        C.id as content_id,
        C.content as content_content,
        C.create_time as content_create_time
        from Blog22 as B
        left join Author as A on B.author_id = A.id
        left join Content as C on B.id = C.blog_id
    </select>

    <select id="selectBlogByAuthor" parameterType="int" resultMap="blogResult">
        select B.id as id, B.blog_name as blog_name,
        B.description,
        B.create_time as create_time,
        A.id as author_id,
        A.name as author_name,
        C.id as content_id,
        C.blog_id as content_blog_id,
        C.content as content_content,
        C.create_time as content_create_time,
        A.id as content_author_id,
        A.name as content_author_name
        from Blog as B
        left join Author as A on B.author_id = A.id
        left join Content as C on B.id = C.blog_id
        where B.author_id = #{id}
    </select>
    <select id="selectContentByBlog" parameterType="int" resultMap="contentResult">
        select C.id as id,
        C.blog_id,
        C.content,
        C.create_time,
        A.id as author_id,
        A.name as author_name
        from Content as C
        left join Author as A on C.author_id = A.id
        where C.blog_id = #{id}
    </select>
    <insert id="insertContent" parameterType="model.Content"
            useGeneratedKeys="true"
            keyProperty="id">
        insert into Content (author_id, blog_id,
        content, create_time)
        values (#{author.id}, #{blogId}, #{content}, #{createTime})
    </insert>
    <delete id="deleteContent" parameterType="int">
        delete from Content
        where id = #{id}
    </delete>
    <update id="updateContent" parameterType="model.Content">
        update Content set content = #{content},
                            id = #{id}
        where id = #{id}
    </update>

    <resultMap id="authorResult" type="model.Author">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
    </resultMap>

    <resultMap id="blogResult" type="model.unknownType">
        <id property="id1" column="id"/>
        <result property="blogName1" column="blog_name"/>
        <result property="description1" column="description"/>
        <result property="createTime1" column="create_time"/>
        <association property="author1" resultMap="authorResult" columnPrefix="author_"/>
        <collection property="contents1" resultMap="contentResult" columnPrefix="content_"/>
    </resultMap>

    <resultMap id="contentResult" type="model.Content">
        <id property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="blogId" column="blog_id"/>
        <result property="createTime" column="create_time"/>
        <association property="author" resultMap="authorResult" columnPrefix="author_"/>
    </resultMap>
</mapper>